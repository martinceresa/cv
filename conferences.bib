@InProceedings{HLola,
  author          = "Ceresa, Mart{\'i}n and Gorostiaga, Felipe and S{\'a}nchez,
                  C{\'e}sar",
  editor          = "Oliveira, Bruno C. d. S.",
  title           = "Declarative Stream Runtime Verification (hLola)",
  booktitle       = "Programming Languages and Systems",
  year            = 2020,
  publisher       = "Springer International Publishing",
  address         = "Cham",
  pages           = "25--43",
  abstract        = "Stream Runtime Verification (SRV) is a formal dynamic
                  analysis technique that generalizes runtime verification
                  algorithms from temporal logics like LTL to stream monitoring,
                  allowing the computation of richer verdicts than Booleans
                  (quantitative values or even arbitrary data). The core of SRV
                  algorithms is a clean separation between temporal dependencies
                  and data computations. In spite of this theoretical separation
                  previous engines include ad-hoc implementations of just a few
                  data types, requiring complex changes in the tools to
                  incorporate new data types.",
  isbn            = "978-3-030-64437-6"
}

@article{QF:Haskell,
  author          = {Grieco, Gustavo and Ceresa, Mart\'{\i}n and Buiras, Pablo},
  title           = {QuickFuzz: An Automatic Random Fuzzer for Common File
                  Formats},
  journal         = {SIGPLAN Not.},
  issue_date      = {December 2016},
  volume          = 51,
  number          = 12,
  month           = sep,
  year            = 2016,
  issn            = {0362-1340},
  pages           = {13--20},
  numpages        = 8,
  url             = {http://doi.acm.org/10.1145/3241625.2976017},
  doi             = {10.1145/3241625.2976017},
  acmid           = 2976017,
  publisher       = {ACM},
  address         = {New York, NY, USA},
  keywords        = {Fuzzing, Hackage, Haskell, QuickCheck},
}

%% Multi

@misc{Ceresa.2022.Multi,
  doi = {10.48550/ARXIV.2207.06681},
  url = {https://arxiv.org/abs/2207.06681},
  author = {Ceresa, Martin and SÃ¡nchez, CÃ©sar},
  keywords = {Logic in Computer Science (cs.LO), Programming Languages (cs.PL), Symbolic Computation (cs.SC), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {Multi: a Formal Playground for Multi-Smart Contract Interaction},
  publisher = {arXiv},
  year = {2022},
  copyright = {Creative Commons Attribution 4.0 International}
}


%%%% Setchain
@misc{Capretto.2022.Setchain.Arxiv,
  doi = {10.48550/ARXIV.2206.11845},
  url = {https://arxiv.org/abs/2206.11845},
  author = {Capretto, Margarita and Ceresa, MartÃ­n and Anta, Antonio FernÃ¡ndez and Russo, Antonio and SÃ¡nchez, CÃ©sar},
  keywords = {Distributed, Parallel, and Cluster Computing (cs.DC), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {Setchain: Improving Blockchain Scalability with Byzantine Distributed Sets and Barriers},
  publisher = {arXiv},
  year = {2022},
  copyright = {Creative Commons Attribution 4.0 International}
}

@InProceedings{Capretto.2022.Setchain,
  author = 	 {Margarita Capretto and Mart\'in Ceresa and Antonio Fern\'andez Anta and Antonio Russo and C\'esar S\'anchez},
  title = 	 {{S}etchain: Improving {B}lockchain Scalability with {B}yzantine Distributed Sets and Barriers},
  OPTcrossref =  {},
  OPTkey = 	 {},
  booktitle = {Proc. of the 2022 IEEE International Conference on Blockchain},
  year = 	 {2022},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  OPTseries = 	 {},
  pages = 	 {87--96},
  OPTmonth = 	 {},
  OPTaddress = 	 {},
  OPTorganization = {},
  publisher = {IEEE},
  OPTnote = 	 {},
  OPTannote = 	 {},
  doi = {10.1109/Blockchain55522.2022.00022}
}
%%%%% Transaction Monitors
@misc{Capretto.2022.TransactionMonitors.Arxiv,
  doi = {10.48550/ARXIV.2207.02517},
  url = {https://arxiv.org/abs/2207.02517},
  author = {Capretto, Margarita and Ceresa, Martin and Sanchez, Cesar},
  keywords = {Cryptography and Security (cs.CR), Logic in Computer Science (cs.LO), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title = {Transaction Monitoring of Smart Contracts},
  publisher = {arXiv},
  year = {2022},
  copyright = {Creative Commons Attribution 4.0 International}
 }

@InProceedings{Capretto.2022.TransactionMonitors,
author="Capretto, Margarita
and Ceresa, Mart{\'i}n
and S{\'a}nchez, C{\'e}sar",
editor="Dang, Thao
and Stolz, Volker",
title="Transaction Monitoring of Smart Contracts",
booktitle="Runtime Verification",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="162--180",
abstract="Blockchains are modern distributed systems that providedecentralized financial capabilities with trustable guarantees. Smart contracts are programs written in specialized programming languages running on a blockchain and govern how tokens and cryptocurrency are sent and received. Smart contracts can invoke other contracts during the execution of transactions initiated by external users.",
isbn="978-3-031-17196-3"
}
